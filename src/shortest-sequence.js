'use strict'
// A positive integer is given. The goal is to construct the shortest posible sequence 
// in integers ending with this integer, using the following rules:
// * The first element of the sequence is 1; more specifically: A[0] = 1
// * Each of the following element is generated by multiplying the previous element by 2 or
//    increasing it by 1; more precisely: A[i] = A[i-1] * 2 or A[i] = A[i-1] + 1, for i>=1
// INPUT: 18 -> OUTPUT: [1,2,4,8,9,18]

const sequence = (number) => {
  return 2 * number
  //return 1 + number
}

exports.shortestSequence = (number) => {
  let array = [1]
  if (number === 1) {
    return array
  } 
  let i = 1
  let found = false
  do {
    array[i] = sequence(number)
    found = array[i] === number
    i++
  } while (!found || array[i] >= number)
  return array
}
